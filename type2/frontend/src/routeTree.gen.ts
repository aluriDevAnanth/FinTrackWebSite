/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TransactionsImport } from './routes/transactions'
import { Route as SavingsGoalImport } from './routes/savingsGoal'
import { Route as IncomesImport } from './routes/incomes'
import { Route as ExpensesImport } from './routes/expenses'
import { Route as BudgetsImport } from './routes/budgets'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TransactionsRoute = TransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRoute,
} as any)

const SavingsGoalRoute = SavingsGoalImport.update({
  id: '/savingsGoal',
  path: '/savingsGoal',
  getParentRoute: () => rootRoute,
} as any)

const IncomesRoute = IncomesImport.update({
  id: '/incomes',
  path: '/incomes',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesRoute = ExpensesImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => rootRoute,
} as any)

const BudgetsRoute = BudgetsImport.update({
  id: '/budgets',
  path: '/budgets',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/budgets': {
      id: '/budgets'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof BudgetsImport
      parentRoute: typeof rootRoute
    }
    '/expenses': {
      id: '/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesImport
      parentRoute: typeof rootRoute
    }
    '/incomes': {
      id: '/incomes'
      path: '/incomes'
      fullPath: '/incomes'
      preLoaderRoute: typeof IncomesImport
      parentRoute: typeof rootRoute
    }
    '/savingsGoal': {
      id: '/savingsGoal'
      path: '/savingsGoal'
      fullPath: '/savingsGoal'
      preLoaderRoute: typeof SavingsGoalImport
      parentRoute: typeof rootRoute
    }
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/incomes': typeof IncomesRoute
  '/savingsGoal': typeof SavingsGoalRoute
  '/transactions': typeof TransactionsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/incomes': typeof IncomesRoute
  '/savingsGoal': typeof SavingsGoalRoute
  '/transactions': typeof TransactionsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/incomes': typeof IncomesRoute
  '/savingsGoal': typeof SavingsGoalRoute
  '/transactions': typeof TransactionsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/budgets'
    | '/expenses'
    | '/incomes'
    | '/savingsGoal'
    | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/budgets'
    | '/expenses'
    | '/incomes'
    | '/savingsGoal'
    | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/budgets'
    | '/expenses'
    | '/incomes'
    | '/savingsGoal'
    | '/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BudgetsRoute: typeof BudgetsRoute
  ExpensesRoute: typeof ExpensesRoute
  IncomesRoute: typeof IncomesRoute
  SavingsGoalRoute: typeof SavingsGoalRoute
  TransactionsRoute: typeof TransactionsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BudgetsRoute: BudgetsRoute,
  ExpensesRoute: ExpensesRoute,
  IncomesRoute: IncomesRoute,
  SavingsGoalRoute: SavingsGoalRoute,
  TransactionsRoute: TransactionsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/budgets",
        "/expenses",
        "/incomes",
        "/savingsGoal",
        "/transactions"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/budgets": {
      "filePath": "budgets.tsx"
    },
    "/expenses": {
      "filePath": "expenses.tsx"
    },
    "/incomes": {
      "filePath": "incomes.tsx"
    },
    "/savingsGoal": {
      "filePath": "savingsGoal.tsx"
    },
    "/transactions": {
      "filePath": "transactions.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
